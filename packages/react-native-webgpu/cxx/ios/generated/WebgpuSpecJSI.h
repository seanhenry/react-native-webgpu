/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleH.js
 */

#pragma once

#include <ReactCommon/TurboModule.h>
#include <react/bridging/Bridging.h>

namespace facebook::react {

class JSI_EXPORT NativeWebgpuModuleCxxSpecJSI : public TurboModule {
 protected:
  NativeWebgpuModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

 public:
  virtual jsi::Object getConstants(jsi::Runtime &rt) = 0;
  virtual bool installWithThreadId(jsi::Runtime &rt, jsi::String threadId) = 0;
};

template <typename T>
class JSI_EXPORT NativeWebgpuModuleCxxSpec : public TurboModule {
 public:
  jsi::Value get(jsi::Runtime &rt, const jsi::PropNameID &propName) override { return delegate_.get(rt, propName); }

  static constexpr std::string_view kModuleName = "WGPUJsi";

 protected:
  NativeWebgpuModuleCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
    : TurboModule(std::string{NativeWebgpuModuleCxxSpec::kModuleName}, jsInvoker),
      delegate_(reinterpret_cast<T *>(this), jsInvoker) {}

 private:
  class Delegate : public NativeWebgpuModuleCxxSpecJSI {
   public:
    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker)
      : NativeWebgpuModuleCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {}

    jsi::Object getConstants(jsi::Runtime &rt) override {
      static_assert(bridging::getParameterCount(&T::getConstants) == 1,
                    "Expected getConstants(...) to have 1 parameters");

      return bridging::callFromJs<jsi::Object>(rt, &T::getConstants, jsInvoker_, instance_);
    }
    bool installWithThreadId(jsi::Runtime &rt, jsi::String threadId) override {
      static_assert(bridging::getParameterCount(&T::installWithThreadId) == 2,
                    "Expected installWithThreadId(...) to have 2 parameters");

      return bridging::callFromJs<bool>(rt, &T::installWithThreadId, jsInvoker_, instance_, std::move(threadId));
    }

   private:
    friend class NativeWebgpuModuleCxxSpec;
    T *instance_;
  };

  Delegate delegate_;
};

}  // namespace facebook::react
