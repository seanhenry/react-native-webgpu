/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#ifndef __cplusplus
#error This file must be compiled as Obj-C++. If you are importing it, you must change your file extension to .mm.
#endif

// Avoid multiple includes of WebgpuExperimentalSpec symbols
#ifndef WebgpuExperimentalSpec_H
#define WebgpuExperimentalSpec_H

#import <Foundation/Foundation.h>
#import <RCTRequired/RCTRequired.h>
#import <RCTTypeSafety/RCTConvertHelpers.h>
#import <RCTTypeSafety/RCTTypedModuleConstants.h>
#import <React/RCTBridgeModule.h>
#import <React/RCTCxxConvert.h>
#import <React/RCTManagedPointer.h>
#import <ReactCommon/RCTTurboModule.h>
#import <optional>
#import <vector>

namespace JS {
namespace NativeWebgpuExperimentalModule {
struct Constants {
  struct Builder {
    struct Input {
      RCTRequired<bool> ENABLE_THREADS;
    };

    /** Initialize with a set of values */
    Builder(const Input i);
    /** Initialize with an existing Constants */
    Builder(Constants i);
    /** Builds the object. Generally used only by the infrastructure. */
    NSDictionary *buildUnsafeRawValue() const { return _factory(); };

   private:
    NSDictionary * (^_factory)(void);
  };

  static Constants fromUnsafeRawValue(NSDictionary *const v) { return {v}; }
  NSDictionary *unsafeRawValue() const { return _v; }

 private:
  Constants(NSDictionary *const v) : _v(v) {}
  NSDictionary *_v;
};
}  // namespace NativeWebgpuExperimentalModule
}  // namespace JS
@protocol NativeWebgpuExperimentalModuleSpec <RCTBridgeModule, RCTTurboModule>

- (NSNumber *)installWithThreadId:(NSString *)threadId;
- (facebook::react::ModuleConstants<JS::NativeWebgpuExperimentalModule::Constants::Builder>)constantsToExport;
- (facebook::react::ModuleConstants<JS::NativeWebgpuExperimentalModule::Constants::Builder>)getConstants;

@end
namespace facebook::react {
/**
 * ObjC++ class for module 'NativeWebgpuExperimentalModule'
 */
class JSI_EXPORT NativeWebgpuExperimentalModuleSpecJSI : public ObjCTurboModule {
 public:
  NativeWebgpuExperimentalModuleSpecJSI(const ObjCTurboModule::InitParams &params);
};
}  // namespace facebook::react
inline JS::NativeWebgpuExperimentalModule::Constants::Builder::Builder(const Input i)
  : _factory(^{
      NSMutableDictionary *d = [NSMutableDictionary new];
      auto ENABLE_THREADS = i.ENABLE_THREADS.get();
      d[@"ENABLE_THREADS"] = @(ENABLE_THREADS);
      return d;
    }) {}
inline JS::NativeWebgpuExperimentalModule::Constants::Builder::Builder(Constants i)
  : _factory(^{
      return i.unsafeRawValue();
    }) {}
#endif  // WebgpuExperimentalSpec_H
