
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJniCpp.js
 */

#include "WebgpuExperimentalSpec.h"

namespace facebook::react {

static facebook::jsi::Value __hostFunction_NativeWebgpuExperimentalModuleSpecJSI_getConstants(
  facebook::jsi::Runtime &rt, TurboModule &turboModule, const facebook::jsi::Value *args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule)
    .invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeWebgpuExperimentalModuleSpecJSI_installWithThreadId(
  facebook::jsi::Runtime &rt, TurboModule &turboModule, const facebook::jsi::Value *args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule)
    .invokeJavaMethod(rt, BooleanKind, "installWithThreadId", "(Ljava/lang/String;)Z", args, count, cachedMethodId);
}

NativeWebgpuExperimentalModuleSpecJSI::NativeWebgpuExperimentalModuleSpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["getConstants"] = MethodMetadata{0, __hostFunction_NativeWebgpuExperimentalModuleSpecJSI_getConstants};
  methodMap_["installWithThreadId"] =
    MethodMetadata{1, __hostFunction_NativeWebgpuExperimentalModuleSpecJSI_installWithThreadId};
}

std::shared_ptr<TurboModule> WebgpuExperimentalSpec_ModuleProvider(const std::string &moduleName,
                                                                   const JavaTurboModule::InitParams &params) {
  if (moduleName == "WGPUExperimentalJsi") {
    return std::make_shared<NativeWebgpuExperimentalModuleSpecJSI>(params);
  }
  return nullptr;
}

}  // namespace facebook::react
